#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <string.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <netdb.h>

#define closesocket close
typedef int SOCKET;

#define MYPORT 9009    // the port users will be connecting to


int main()
{
    SOCKET sock;
    sock = socket(AF_INET,SOCK_DGRAM,0);

    int broadcast = 1;

    if(setsockopt(sock,SOL_SOCKET,SO_BROADCAST,&broadcast,sizeof(broadcast)) < 0)
    {
        printf("Error in setting Broadcast option");
        closesocket(sock);
        return 0;
    }

    struct sockaddr_in receiver_addr;
    struct sockaddr_in Sender_addr;

    int len = sizeof(struct sockaddr_in);

    char sendMSG[] ="Broadcast message from sender";

    char received_buffer[50] = "";
    int received_buffer_length = 50;

    receiver_addr.sin_family = AF_INET;
    receiver_addr.sin_port = htons(MYPORT);

//  receiver_addr.sin_addr.s_addr  = INADDR_BROADCAST; // this isq equiv to 255.255.255.255

    receiver_addr.sin_addr.s_addr = inet_addr("192.168.100.255");

    if(sendto(sock, sendMSG,strlen(sendMSG)+1, 0, (struct sockaddr*)&receiver_addr, sizeof(receiver_addr))<0)
        perror("Error on send");
    printf("Successfully sent: %s\n", sendMSG);

    if(recvfrom(sock, received_buffer, received_buffer_length, 0, (struct sockaddr *)&receiver_addr, (socklen_t*)&len)<0)
        perror("Error on receive");

    printf("Received message from receiver is %s", received_buffer);

    closesocket(sock);
}
