
// exists on all platforms

#include <stdio.h>

#ifndef WIN32
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <string.h>
#include <arpa/inet.h>

#include <unistd.h>

#else
#include<WinSock2.h>
#include <stdint.h>

#endif
int main() {
    int c;
    struct sockaddr_in server;
    uint16_t a, b, suma;
    c = socket(AF_INET, SOCK_STREAM, 0);
    if (c < 0) {
        printf("Eroare la crearea socketului client\n");
        return 1;
    }
    memset(&server, 0, sizeof(server));
    server.sin_port = htons(1234);
    server.sin_family = AF_INET;
    server.sin_addr.s_addr = inet_addr("192.168.100.18");
    if (connect(c, (struct sockaddr *) &server, sizeof(server)) < 0) {
        printf("Eroare la conectarea la server\n");
        return 1;
    }
    uint32_t length1;
    if(recv(c, (char*)&length1, sizeof(length1), 0)< sizeof(length1))
        printf("Error on receiving message length\n");
    length1 = ntohl(length1);

    char message1[1024];
    if(recv(c, message1, length1, 0) < length1)
        printf("Error on receiving full message\n");
    printf("%s", message1);

    uint32_t length2;
    if(recv(c, (char*)&length2, sizeof(length2), 0) < sizeof(length2))
        printf("Error on receiving length\n");
    length2 = ntohl(length2);

    char message2[1024];
    if(recv(c, message2, length2, 0)<length2)
        printf("Error on receiving full message\n");
    printf("%s", message2);
    printf("a = ");
    scanf("%hu", &a);
    printf("b = ");
    scanf("%hu", &b);
    a = htons(a);
    b = htons(b);
    send(c, (char*)&a, sizeof(a), 0);
    send(c, (char*)&b, sizeof(b), 0);
    recv(c, (char*)&suma, sizeof(suma), 0);
    suma = ntohs(suma);
    printf("Suma este %hu\n", suma);
    close(c);
}
